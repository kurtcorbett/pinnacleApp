{
  "name": "knex",
  "version": "0.6.22",
  "description": "A batteries-included SQL query & schema builder for Postgres, MySQL and SQLite3 and the Browser",
  "main": "knex.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "minimist": "~0.0.9",
    "bluebird": "1.2.x",
    "chalk": "^0.4.0",
    "commander": "^2.2.0",
    "interpret": "^0.3.2",
    "liftoff": "^0.11.0",
    "semver": "^2.3.0",
    "tildify": "^0.2.0",
    "generic-pool-redux": "~0.1.0",
    "inherits": "~2.0.1",
    "lodash": "~2.4.0",
    "mkdirp": "^0.5.0",
    "readable-stream": "^1.1.12"
  },
  "devDependencies": {
    "through": "^2.3.4",
    "browserify": "^4.0.0",
    "gulp": "^3.6.2",
    "gulp-bump": "^0.1.8",
    "gulp-git": "^0.4.2",
    "gulp-shell": "^0.2.5",
    "chai": "^1.9.1",
    "chai-as-promised": "^4.1.0",
    "jshint": "~2.5.1",
    "mocha": "^1.20.0",
    "mysql": "^2.3.1",
    "node-uuid": "~1.4.0",
    "pg": "^3.2.0",
    "pg-query-stream": "^0.6.0",
    "rimraf": "2.x",
    "sinon": "^1.10.0",
    "sinon-chai": "^2.5.0",
    "sqlite3": "^2.2.3",
    "mariasql": "~0.1.21",
    "mysql2": "~0.12.1",
    "istanbul": "~0.2.11",
    "coveralls": "~2.10.0"
  },
  "scripts": {
    "build": "gulp build",
    "test": "istanbul --config=test/.istanbul.yml cover _mocha -- --check-leaks -t 5000 -b -R spec test/index.js",
    "coveralls": "cat ./test/coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
    "jshint": "jshint knex.js lib/*",
    "release:patch": "npm run jshint && npm test && gulp build && gulp bump --type patch && gulp release",
    "release:minor": "npm run jshint && npm test && gulp build && gulp bump --type minor && gulp release"
  },
  "bin": {
    "knex": "./lib/bin/cli.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/tgriesser/knex.git"
  },
  "keywords": [
    "sql",
    "query",
    "postgresql",
    "mysql",
    "sqlite3"
  ],
  "author": {
    "name": "Tim Griesser",
    "url": "https://github.com/tgriesser"
  },
  "files": [
    "README.md",
    "lib/*",
    "browser/*",
    "gulpfile.js",
    "knex.js",
    "LICENSE"
  ],
  "license": "MIT",
  "readme": "# [knex.js](http://knexjs.org) [![Build Status](https://travis-ci.org/tgriesser/knex.png?branch=master)](https://travis-ci.org/tgriesser/knex) [![Coverage Status](https://coveralls.io/repos/tgriesser/knex/badge.png?branch=master)](https://coveralls.io/r/tgriesser/knex?branch=master)\n\nA SQL query builder that is flexible, portable, and fun to use!\n\nA batteries-included, multi-dialect (MySQL, PostgreSQL, SQLite3, WebSQL) query builder for\nNode.js and the Browser, featuring:\n\n- [transactions](http://knexjs.org/#Transactions)\n- [connection pooling](http://knexjs.org/#Installation-pooling)\n- [streaming queries](http://knexjs.org/#Interfaces-Streams)\n- both a [promise](http://knexjs.org/#Interfaces-Promises) and [callback](http://knexjs.org/#Interfaces-Callbacks) API\n- a [thorough test suite](https://travis-ci.org/tgriesser/knex)\n- the ability to [run in the Browser](http://knexjs.org/#Installation-browser)\n\n[Read the full documentation to get started!](http://knexjs.org)\n\nFor support and questions, join the #bookshelf channel on freenode IRC\n\nFor an Object Relational Mapper, see: http://bookshelfjs.org\n\n## Examples\n\nWe have several examples [on the website](http://knexjs.org). Here is the first one to get you started:\n\n```js\nvar knex = require('knex')({\n  dialect: 'mysql',\n  connection: process.env.DB_CONNECTION_STRING\n});\n\n// Create a table\nknex.schema.createTable('users', function(table) {\n  table.increments('id');\n  table.string('user_name');\n})\n\n// ...and another\n.createTable('accounts', function(table) {\n  table.increments('id');\n  table.string('account_name');\n  table.integer('user_id').unsigned().references('users.id');\n})\n\n// Then query the table...\n.then(function() {\n  return knex.insert({user_name: 'Tim'}).into('users');\n})\n\n// ...and using the insert id, insert into the other table.\n.then(function(rows) {\n  return knex.table('accounts').insert({account_name: 'knex', user_id: knex.rows[0]});\n});\n\n// Query both of the rows.\n.then(function() {\n  return knex('users')\n    .join('accounts', 'accounts.id')\n    .select('users.user_name as user', 'accounts.account_name as account');\n})\n\n// .map over the results\n.map(function(row) {\n  console.log(row);\n})\n\n// Finally, add a .catch handler for the promise chain\n.catch(function(e) {\n  console.error(e);\n});\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/tgriesser/knex/issues"
  },
  "_id": "knex@0.6.22",
  "dist": {
    "shasum": "0e378f29759c65531ece3f65c291a2b400503762"
  },
  "_from": "knex@",
  "_resolved": "https://registry.npmjs.org/knex/-/knex-0.6.22.tgz"
}
